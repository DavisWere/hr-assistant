# Generated by Django 5.2.4 on 2025-07-05 07:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="KnowledgeBaseArticle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Title of the article (e.g., 'Company Policies')",
                        max_length=255,
                        unique=True,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ChatMessage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sender_type",
                    models.CharField(
                        choices=[("user", "User"), ("assistant", "Assistant")],
                        help_text="Indicates if the sender was 'user' or 'assistant'",
                        max_length=30,
                    ),
                ),
                (
                    "message_text",
                    models.TextField(help_text="The content of the message"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the message was sent",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who sent or received this message",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EscalationRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "issue_description",
                    models.TextField(
                        help_text="A brief description of the issue, often the last user message"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("in_progress", "In Progress"),
                            ("resolved", "Resolved"),
                            ("closed", "Closed"),
                        ],
                        default="pending",
                        help_text="Current status of the request",
                        max_length=50,
                    ),
                ),
                (
                    "requested_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the request was made",
                    ),
                ),
                (
                    "resolved_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Timestamp when the request was resolved",
                        null=True,
                    ),
                ),
                (
                    "resolved_by",
                    models.ForeignKey(
                        blank=True,
                        help_text="The HR user who resolved the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="resolved_escalations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who initiated the request",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="escalation_requests",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MessageFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "feedback_type",
                    models.CharField(
                        choices=[("positive", "Positive"), ("negative", "Negative")],
                        help_text="Type of feedback: 'positive' or 'negative'",
                        max_length=8,
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the feedback was provided",
                    ),
                ),
                (
                    "content",
                    models.TextField(help_text="The detailed content of the article"),
                ),
                (
                    "category",
                    models.CharField(
                        blank=True,
                        help_text="Category of the article (e.g., 'Policies', 'Well-being')",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "keywords",
                    models.TextField(
                        blank=True,
                        help_text="Comma-separated keywords for search/matching",
                        null=True,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="Timestamp when the article was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, help_text="Last update timestamp for the article"
                    ),
                ),
                (
                    "message",
                    models.ForeignKey(
                        help_text="The ID of the assistant message being rated",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedbacks",
                        to="notification.chatmessage",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="The user who provided the feedback",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback_given",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
